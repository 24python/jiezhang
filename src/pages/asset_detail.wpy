<template>
<view class="container">
  <view id="wallet-header">
    <view class="surplus">
      <view class="surplus-amount fs24" @tap="showCaculate">
        <text>{{ header.surplus }}</text>
        <image class="edit-icon" src="../public/images/edit.png"></image>
      </view>
      <view class="fs12">余额</view>
    </view>
    <view class="bottom">
      <view>
        <view class="fs24">{{ header.income }}</view>
        <view class="fs12">收入</view>
      </view>
      <view>
        <view class="fs24">{{ header.expend }}</view>
        <view class="fs12">支出</view>
      </view>
    </view>
  </view>

  <view id="all-assets" wx:if="{{ !showEmpty }}">
    <view class="asset category" wx:for="{{ list }}" wx:for-item="pst" bindtap="showHidden('{{ index }}')">
      <view class="detail">
        <view class="title">
          <view class="pull-left time align-column">
            <view class="fs14">{{ pst.month }}月</view>
            <view class="fs12 description">{{ pst.year }}</view>
          </view>
          <view class="pull-left align-column income-and-expend">
            <view class="fs12 income">收入 {{ pst.income_amount }}</view>
            <view class="fs12 expend">支出 {{ pst.expend_amount }}</view>
          </view>
          <view class="pull-right align-column left-money">
            <view class="fs12">结余</view>
            <view class="fs18">{{ pst.surplus }}</view>
          </view>
        </view>

        <view class="single" wx:for="{{ pst.childs }}" hidden="{{ pst.hidden }}" @tap="showStatement('{{ item.id }}')">
          <view class="pull-left col999 date-time">
            <view class="fs14">{{ item.day }}</view>
            <view class="fs12">{{ item.week }}</view>
          </view>
          <view class="pull-right fs16 money {{ item.type }}">{{ item.amount }}</view>
          <view class="information">
            <view class="pull-left icon"><image src="{{ item.icon_path }}"></image></view>
            <view class="pull-left title">
              <view class="fs14">{{ item.name }}</view>
              <view class="fs12 description" wx:if="{{ item.description != null }}">{{ item.description }}</view>
            </view>
          </view>
        </view>

      </view>
    </view>
  </view>

  <view wx:else>
    <empty title="暂无数据哦~"></empty>
  </view>

  <caculate @invokeCaculation.user="invokeCaculation" hidden="{{ !showCaculation }}"></caculate>
</view>
</template>

<script>
	import wepy from 'wepy'
  import api from "../api/api";
  import Caculate from '../components/caculate'
  import Empty from '../components/empty'

  export default class AssetDetail extends wepy.page {
    config = {
      enablePullDownRefresh: true
    }

    components = {
      caculate: Caculate,
      empty: Empty
    }

		data = {
      asset_id: 0,
      header: {
        income: '0.00',
        expend: '0.00',
        surplus: '0.00'
      },
      list: [], 
      already_load: false,
      showCaculation: false 
    }
    
    methods = {
      showHidden(idx) {
        let value = !this.list[idx].hidden
        this.list[idx]['hidden'] = value
			},
      showStatement (id) {
        wx.navigateTo({ url: `/pages/statement?id=${id}` })
      },
      showCaculate() {
        this.showCaculation = true
      },
      invokeCaculation (amount) {
        this.showCaculation = false
        this.updateSurplus(amount)
      }
    }

    onLoad (options) {
      this.asset_id = options.id
      this.already_load = true
      this.information()
      this.statements()
      
    }

    onShow () {
      if (this.already_load) {
        this.information()
        this.statements()
      }
    }

    onPullDownRefresh () {
      this.information()
      this.statements()
    }

    async information () {
       const res = await api.AssetDetailInformation({
        query: {
          asset_id: this.asset_id
        }
      })
      this.header = res.data
      this.$apply()
    }

    async statements () {
       const res = await api.AssetDetailList({
        showLoading: true,
        query: {
          asset_id: this.asset_id
        }
      })
      this.list = res.data
      this.$apply()
    }

		async updateSurplus (amount) {
      const res = await api.AssetSurplus({
        method: "PUT",
        query: {
          asset_id: this.asset_id,
          amount: amount
        }
      })

      if (res.data.status == 200) {
        this.information()
      } else {
        tip.error(res.data.msg)
      }
    }

    computed = {
      showEmpty () {
        return this.list.length <= 0
      }
    }

  }
</script>
<style lang="less">
#wallet-header {
  display: flex;
  justify-content: space-around;
  flex-direction: column;
  height: 120px;
  position: relative;
  background: linear-gradient(rgba(251, 75, 77, 1), rgba(241, 75, 77, 0.9)); /* 标准的语法 */
  box-shadow: 0 0 10px #ccc;
  color: white;
  padding:0 8px;
  .bottom {
    & > view {
      width: 50%;
      float: left;
    }
  }
  .edit-icon {
    width: 25px;
    height: 25px;
    margin-left: 8px;
  }
}

#all-assets {
  .col999 {
    color: #999;
  }
  .category {
    .detail > .title {
      overflow-y: hidden;
      background: rgba(248, 248, 248, 0.5);
      padding:8px 12px;
      border-bottom: 1px solid #efefef;
      > .time {
        text-align: center;
      }
      .align-column {
        display: flex;
        justify-content: space-around;
        flex-direction: column;
        height: 35px;
      }
      .income-and-expend {
        margin-left: 8px;
      }
      .left-money {
        color: #999;
        text-align: right;
      }
    }
    .single {
      padding: 6px 12px 6px 0;
      overflow: hidden;
      border-bottom: 1px solid #efefef;
      .money {
        display: flex;
        justify-content: space-around;
        flex-direction: column;
        height: 35px;
      }
      .date-time {
        width: 42px;
        text-align: center;
      }

      .information {
        overflow: hidden;
        margin-left: 42px;
        .title {
          display: flex;
          justify-content: space-around;
          flex-direction: column;
          height: 35px;
        }
        .description {
          color: #999;
        }
        .icon {
          width: 35px;
          height: 35px;
          margin: 0 8px;
          image {
            width: 100%;
            height: 100%;
          }
        }
      }
    }
  }
}

</style>