<template lang="wxml">
  <view class="category-component">
    <view wx:if="{{ !showLast }}">
      <view class="header fs14">上次使用</view>
      <category :category.sync="last" @choseItem.user="setCategory"></category>
    </view>

    <view wx:if="{{ frequent.length > 0 }}">
      <view class="header fs14">常用</view>
      <repeat for="{{frequent}}" key="index" index="index" item="child">
        <category :category.sync="child" @choseItem.user="setCategory"></category>
      </repeat>
    </view>

    <view wx:for="{{ list }}">
      <view class="header fs14">{{ item.name }}</view>
      <repeat for="{{item.childs}}" key="index" index="index" item="child">
        <category :category.sync="child" @choseItem.user="setCategory"></category>
      </repeat>
    </view>
    <navigator url="/pages/categories/category_form?type={{ type }}">
      <view class="add-wallet">
        <image src="../../public/images/wallet-add.png"></image>
        <text class="fs16">添加分类</text>
      </view>
    </navigator>
  </view>
</template>

<script>
  import wepy from 'wepy'
  import api from "../../utils/api"
  import tip from '../../utils/tip'
  import Category from '../../components/category_item'
  export default class choseCategory extends wepy.page {
    data = {
      frequent: [],
      last: null,
      list: [],
      type: 'expend',
      already_load: false
    }

    components = {
			category: Category
    };

    async onLoad (options) {
      this.type = options.type
    }
    
    onShow () {
      this.getCategory()
    }

    methods = {
      setCategory (category) {
        const pages = getCurrentPages()
        const prevPage = pages[pages.length - 2]
        prevPage.setCategory(category)
        wepy.navigateBack({
          delta: 1
        })
      }
    }

    async getCategory () {
      const res = await api.StatementCategories({
        query: { type: this.type }
      })
      const data = res.data
      this.frequent = data.frequent
      this.last = data.last
      this.list = data.categories
      this.$apply()
    } 

    computed = {
      showLast () {
        return this.last == null
      }
    }
  }
</script>
<style lang="less">
  page {
    background: #efefef;
  }
  .category-component {
    @import "../../public/styles/chose_category.less";
  }
  .add-wallet {
    display:flex;
    justify-content:center;
    padding:8rpx 0;
    color:#999;
    margin:8rpx 0;
  }
  .add-wallet image {
    width:50rpx;
    height:50rpx;
    display:inline-block;
    margin-right:8rpx;
  }
</style>