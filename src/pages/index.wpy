<template>
  <view class="container">
    <view class="header">
      <image class="bg" src="{{ bgImage }}"></image>
      <!-- <view class="notification">
        <image src="../public/images/notification.png"></image>
      </view> -->
      <view class="set-avatar" @tap="setAvatar">设置封面</view>

      <view class="level-2">
        <view class="fs14">
          <text>今日支出</text>
          <text class="pay-num"> {{ header.pay_num }} </text>
          <text>笔，共</text>
        </view>
        <view class="fs21 today-expend">{{ header.today_pay }}</view>
        <view class="overflow-hide">
          <view class="pull-left fs14">本月支出 {{ header.month_pay }}</view>
          <navigator url="/pages/budgets/budget"><view class="pull-right fs14">预算剩余 {{ header.budget }}</view></navigator>
        </view>
      </view>
    </view>
    
    <view class="zan-btns">
      <navigator url="/pages/statements/statement">
        <button class="zan-btn zan-btn--danger btn-shadow">记一笔</button>
      </navigator>
    </view>

    <view class="scope {{ tabFixed }}">
      <view class="today {{ tabActive == 'today' ? 'active' : '' }}" @tap="choseTab('today')">今天</view>
      <view class="week {{ tabActive == 'week' ? 'active' : '' }}" @tap="choseTab('week')">本周</view>
      <view class="month {{ tabActive == 'month' ? 'active' : '' }}" @tap="choseTab('month')">本月</view>
      <view class="year {{ tabActive == 'year' ? 'active' : '' }}" @tap="choseTab('year')">本年</view>
    </view>

    <view class="statement-list">
      <view class="surplus" hidden="{{ scope == 'today' }}">
        <text class="income">收入 {{ tabHeader.income }}</text>
        <text class="expend">支出 {{ tabHeader.expend }}</text>
        <text>结余 {{ tabHeader.surplus }}</text>
      </view>

      <view wx:if="{{ scope == 'year' || scope == 'month' }}">
        <IndexYear :list.sync="list"></IndexYear>
      </view>

      <view wx:else>
        <repeat for="{{ list }}" key="index" index="index" item="item">
          <indexst :statement.sync="item"></indexst>
        </repeat>
      </view>
    </view>

    <view class="no-more-data" hidden="{{ !noMoreData }}">
      没有更多了
    </view>

    <view wx:if="{{ list.length == 0 && scope == 'today' }}">
      <empty title="今天还没有记账呢~"></empty>
    </view>
  </view>
</template>

<script>
  import wepy from 'wepy'
  import api from "../utils/api"
  import Empty from '../components/empty'
  import IndexSt from '../components/index_st'
  import IndexYear from '../components/index/year'
  export default class Index extends wepy.page {
    config = {
      navigationBarTitleText: '首页',
      enablePullDownRefresh: true
    }

    data = {
      indicatorDots: true,
      autoplay: false,
      duration: 600,
      tabActive: 'today',
      scope: 'today',
      tabHeader: {
        surplus: 0,
        income: 0,
        expend: 0
      },
      list: [],
      curPage: 1,
      per_page: 20,
      tabFixed: '',
      header: {
        today_pay: 0,
        pay_num: 0,
        budget: 0,
        bg_avatar: '../public/images/default-bg.jpeg'
      },
      statementMonth: [],
      noMoreData: false,
      stopRequest: false,
      preventRepeatReuqest: false
    }

    components = {
      empty: Empty,
      indexst: IndexSt,
      IndexYear: IndexYear
		}

    methods = {
      async setAvatar () {
        const choseImages = await wepy.chooseImage({
          count: 1,
          sizeType: ['compressed'],
          sourceType: ['album']
        })
        const uploadResult = await api.Upload(
          {
            file_path: choseImages.tempFilePaths[0],
            query: {
              type: 'bg_avatar'
            }
          })
        this.getHeader()
      },
      async choseTab (item) {
        this.tabActive = item
        this.curPage = 1
        if (this.scope != item) {
          this.scope = item
          this.noMoreData = false
          this.statementMonth = []
          let cacheList = wx.getStorageSync(`list-${item}`) || null
          let cacheHeader = wx.getStorageSync(`header-${item}`) || null
          if (cacheList !== null && cacheHeader !== null) {
            this.list = cacheList
            this.tabHeader = cacheHeader
          } else {
            this.list = []
            await this.getList()
          }
        }
      },
       onPageScroll: function (event) {
        let scrollTop = event.scrollTop
        if (scrollTop >= 250) {
          this.tabFixed = 'tab-fix'
        } else {
          this.tabFixed = ''
        }
      }
    }

    onHide () {
      this.deleteCache()
    }

    onPullDownRefresh () {
      wx.stopPullDownRefresh()
      this.getHeader()
      this.curPage = 1
      this.list = []
      this.stopRequest = false
      this.getList({showLoading: true})
    }

    async onLoad () {
      await this.getHeader()
      await this.getList()
    }

    // 此函数用于 statement.wpy 里更新后调用
    updateStatement (id, type) {
      // 此处应使用二分查找
      if (type == 'put' || type == 'delete') {
        let index = 0
        for(let item of this.list) {
          if (item.id == id) {
            if(type == 'delete') {
              this.list.splice(index, 1)
            } else {
              this.getStatementById(item, id)
            }
            break
          }
          index += 1
        }
      } else {
        this.addStatementById(id)
      }
    }

    async onReachBottom () {
      this.curPage ++
      await this.getList({from: 'reachBottom'})
    }

    async getHeader () {
      const res = await api.getIndexHeader()
      this.header = res.data
      this.$apply()
    }

    async getList(options = {}) {
      const res = await api.getIndexList({
        showLoading: options.showLoading,
        query: {
          scope: this.scope,
          page: this.curPage,
          per_page: this.per_page
        }
      })
      const data = res.data.list
      this.tabHeader = res.data.header
      if(res.data.status != 405) {
        if (this.scope == 'year' || this.scope == 'month') {
          this.dealWithYear(data)
        } else {
          this.list = Array.from(new Set([...this.list, ...data]))
        }
        wx.setStorageSync(`header-${this.scope}`, this.tabHeader)
        wx.setStorageSync(`list-${this.scope}`, this.list)
        this.noMoreData = false
      }
      if (options.from == 'reachBottom' && ((data != undefined && data.length == 0) || res.data.status == 405)) {
        this.noMoreData = true
      }
      this.$apply()
    }

    async getStatementById(obj, id) {
      const res = await api.getIndexBill(id)
      Object.assign(obj, res.data)
      this.$apply()
    }

    async addStatementById(id) {
      const res = await api.getIndexBill(id)
      this.list = [res.data].concat(this.list)
      this.$apply()
    }

    // 太曲折了!!!
    // 分组分页
    dealWithYear (data) {
      if (this.list.length == 0) {
        this.list = data
      } else {
        let set1 = new Set(this.statementMonth)
        for(let i = 0, length = data.length; i < length; ++i) {
          if (set1.has(data[i].header.month)) {
            data[i].header = null
          }
        }
        this.list = Array.from(new Set([...this.list, ...data]))
      }
      for(let item of data) {
        if (item.header !== null) this.statementMonth.push(item.header.month)
      }
    }

    deleteCache () {
      for(let item of ['today', 'week', 'month', 'year']) {
        wx.removeStorageSync(`header-${item}`)
        wx.removeStorageSync(`list-${item}`)
      }
    }

    computed = {
      showEmpty () {
        return this.list.length <= 0
      },
      todayMonthDay () {
        const NowDate = new Date()
        let month = NowDate.getMonth() + 1
        let day = NowDate.getDate()
        if (month < 10) month = "0" + month
        if (day < 10) day = "0" + day
        return  month + "-" + day
      },
      bgImage () {
        let avatar = this.header.bg_avatar
        if (avatar == null) {
          avatar = "../public/images/default-bg.jpeg"
        }
        return avatar
      }
    }
  }
</script>
<style lang="less">
.header {
	position:relative;
	color:white;
	height:380rpx;
	.bg {
    position:absolute;
    width:100%;
    height:100%;
    top:0;
    left:0;
    z-index:-1;
  }
  .level-2 {
    position:absolute;
    bottom:24rpx;
    width:100%;
    .today-expend {
      font-size:64rpx;
      margin-bottom:16rpx;
    }
    > view {
      padding:0 16rpx;
    }
  }
  .pay-num {
    background:rgb(32,86,174);
    margin:0 4rpx;
  }
  .notification {
    position:absolute;
    top:42rpx;
    right:42rpx;
    width:60rpx;
    height:60rpx;
    background:black;
    border-radius:50%;
    padding:8rpx;
    image {
      width:100%;
      height:100%;
    }
  }
}
.today {
	background-size:cover;
	background-position:10rpx -170rpx;
}
.cur-month-progress {
	padding:0 40rpx;
}
.new-record-btn {
	margin-bottom:16rpx;
	position:relative;
	display:block;
	margin-left:auto;
	margin-right:auto;
	padding-left:28rpx;
	padding-right:28rpx;
	box-sizing:border-box;
	font-size:36rpx;
	text-align:center;
	text-decoration:none;
	line-height:2;
	border-radius:6rpx;
	-webkit-tap-highlight-color:transparent;
	overflow:hidden;
	color:white;
	background-color:#48C4FE;
}
.new-bill {
	margin:24rpx;
}
.new-bill button {
	border-radius:4rpx;
	background:rgba(251,75,77,0.9);
	color:white;
	box-shadow:4rpx 6rpx 16rpx #ccc;
	text-align:center;
	line-height:2;
}
.new-bill:before {
	content:none !important;
}
.current-day {
	background: orange !important;
	color:white !important;
}
.set-avatar {
  position:absolute;
  right:8rpx;
  top:40rpx;
  width:160rpx;
  text-align:center;
  height:60rpx;
  line-height:64rpx;
  background:rgba(0, 0, 0, 0.5);
  font-size:24rpx;
  border-radius:32rpx;
  color:#ccc;
}
.statement-list {
  margin-bottom: 40rpx;
  > .surplus {
    text-align: center;
    > text {
      font-size: 24rpx;
      padding:0 12rpx;
    }
  }
  > .total {
    text-align: right;
    margin:0 32rpx;
    > text {
      font-size: 24rpx;
      &:first-child {
        padding-right: 16rpx;
      }
    }
  }
}

.date-category {
  height: 60rpx;
  padding: 0 12rpx;
  display: flex;
  align-items: center;
  margin:28rpx 32rpx 0 32rpx;
  justify-content: space-between;
  border-bottom:1px solid #fafafa;
  .name {
    display: inline-block;
    // color: #999;
  }
  .total {
    > text {
      font-size: 12px;
      &:first-child {
        padding-right: 16rpx;
      }
    }
  }
}
.no-more-data {
  text-align: center;
  color: #999;
  background: #efefef;
  height: 60rpx;
  line-height: 60rpx;
  font-size: 28rpx;
}
.scope {
  text-align: center;
  margin-bottom: 24rpx;
  > view {
    display: inline;
    font-size: 32rpx;
    padding: 12rpx 24rpx;
  }
  .today.active {
    color: red;
    border-bottom: 4rpx solid red;
  }
  .week.active {
    color: green;
    border-bottom: 4rpx solid green;
  }
  .month.active {
    color: orange;
    border-bottom: 4rpx solid orange;
  }
  .year.active {
    color: #A52A2A;
    border-bottom: 4rpx solid #A52A2A;
  }
  &.tab-fix {
    position:fixed;
    top:0;
    width:100%;
    height:70rpx;
    background: white;
  }
}
</style>
