<template>
  <view class="container">
    <view class="header">
      <image class="bg" src="../public/images/dawn-sun-mountain-landscape-65865.jpeg"></image>
      <!-- <view class="notification">
        <image src="../public/images/notification.png"></image>
      </view> -->

      <view class="level-2">
        <view class="fs14">
          <text>今日支出</text>
          <text class="pay-num"> {{ header.pay_num }} </text>
          <text>笔，共</text>
        </view>
        <view class="fs21 today-expend">{{ header.today_pay }}</view>
        <view class="overflow-hide">
          <view class="pull-left fs14">本月支出 {{ header.month_pay }}</view>
          <navigator url="/pages/budgets/budget"><view class="pull-right fs14">预算剩余 {{ header.budget }}</view></navigator>
        </view>
      </view>
    </view>
    
    <view class="zan-btns">
      <navigator url="/pages/statements/statement">
        <button class="zan-btn zan-btn--danger btn-shadow">记一笔</button>
      </navigator>
    </view>

    <view class="content" wx:if="{{ !showEmpty }}">
      <view class="time-axis">
        <ul>
          <li wx:for="{{ list }}" @tap="statement('{{ item.id }}')">
            <view class="st-title">
              <text class="title fs16">{{ item.category }}</text>
              <text class="pull-right money {{ item.type }}">{{ item.money }}</text>
            </view>
            <view class="description">{{ item.remark || '　' }}</view>
            <view class="order-info overflow-hide">
              <category class="pull-left">
                <label>{{ item.asset }}</label>
              </category>
              <time class="pull-right">{{ item.timeStr }}</time>
            </view>
            <view class="category-month-day" wx:if="{{ item['month_day'] !== todayMonthDay }}">{{ item.month_day }}</view>
            <view class="category-month-day current-day" wx:else>今天</view>
          </li>
        </ul>
      </view>
    </view>

    <view wx:else>
      <empty title="快来记录第一笔帐吧~"></empty>
    </view>
  </view>
</template>

<script>
  import wepy from 'wepy'
  import api from "../api/api"
  import Empty from '../components/empty'
  export default class Index extends wepy.page {
    config = {
      navigationBarTitleText: '首页',
      enablePullDownRefresh: true
    }

    data = {
      indicatorDots: true,
      autoplay: false,
      duration: 600,
      list: [],
      curPage: 1,
      header: {
        today_pay: 0,
        pay_num: 0,
        budget: 0,
      },
      stopRequest: false,
      preventRepeatReuqest: false
    }

    components = {
			empty: Empty
		}

    methods = {
      statement (id) {
        wepy.navigateTo({
          url: `/pages/statements/statement?id=${id}`
        })
      }
    }

    computed = {
      showEmpty () {
        return this.list.length <= 0
      },
      todayMonthDay () {
        const NowDate = new Date()
        let month = NowDate.getMonth() + 1
        let day = NowDate.getDate()
        if (month < 10) month = "0" + month
        if (day < 10) day = "0" + day
        return  month + "-" + day
      }
    }

    onPullDownRefresh () {
      wx.stopPullDownRefresh()
      this.getHeader()
      this.curPage = 1
      this.list = []
      this.stopRequest = false
      this.getList({showLoading: true})
    }

    // onShow () {
    //   this.getHeader()
    // }

    async onLoad () {
      await this.getHeader()
      await this.getList()
    }

    // 此函数用于 statement.wpy 里更新后调用
    updateStatement (id, type) {
      // 此处应使用二分查找
      if (type == 'put' || type == 'delete') {
        let index = 0
        for(let item of this.list) {
          if (item.id == id) {
            if(type == 'delete') {
              this.list.splice(index, 1)
            } else {
              this.getStatementById(item, id)
            }
            break
          }
          index += 1
        }
      } else {
        this.addStatementById(id)
      }
      this.getHeader()
    }

    onReachBottom () {
      if (this.preventRepeatReuqest) return true
      this.preventRepeatReuqest = true;
      this.curPage ++
      this.getList()
      this.preventRepeatReuqest = false
    }

    async getHeader () {
      const res = await api.getIndexHeader()
      this.header = res.data
      this.$apply()
    }

    async getList(options = {}) {
      if(this.stopRequest) return false
      const res = await api.getIndexList({
        showLoading: options.showLoading,
        query: {
          page: this.curPage
        }
      })
      const data = res.data
      if(data.status == 405) {
        this.stopRequest = true
      }
      this.list = [...this.list, ...data]
      this.$apply()
    }

    async getStatementById(obj, id) {
      const res = await api.getIndexBill({
        query: { id: id }
      })
      Object.assign(obj, res.data)
      this.$apply()
    }

    async addStatementById(id) {
      const res = await api.getIndexBill({
        query: { id: id }
      })

      this.list = [res.data].concat(this.list)
      this.$apply()
    }

  }
</script>
<style lang="less">
  .header {
	position:relative;
	color:white;
	height:460rpx;
	.bg {
	position:absolute;
	width:100%;
	height:100%;
	top:0;
	left:0;
	z-index:-1;
}
.level-2 {
	position:absolute;
	bottom:24rpx;
	width:100%;
	.today-expend {
	font-size:64rpx;
	margin-bottom:16rpx;
}
> view {
	padding:0 16rpx;
}
}.pay-num {
	background:rgb(32,86,174);
	margin:0 4rpx;
}
.notification {
	position:absolute;
	top:42rpx;
	right:42rpx;
	width:60rpx;
	height:60rpx;
	background:black;
	border-radius:50%;
	padding:8rpx;
	image {
	width:100%;
	height:100%;
}
}}.today {
	background-size:cover;
	background-position:10rpx -170rpx;
}
.today-pay {
	font-size:24rpx;
}
.today-total {
	font-weight:600;
}
.cur-month-progress {
	padding:0 40rpx;
}
.new-record-btn {
	margin-bottom:16rpx;
	position:relative;
	display:block;
	margin-left:auto;
	margin-right:auto;
	padding-left:28rpx;
	padding-right:28rpx;
	box-sizing:border-box;
	font-size:36rpx;
	text-align:center;
	text-decoration:none;
	line-height:2;
	border-radius:6rpx;
	-webkit-tap-highlight-color:transparent;
	overflow:hidden;
	color:white;
	background-color:#48C4FE;
}
.new-bill {
	margin:24rpx;
}
.new-bill button {
	border-radius:4rpx;
	background:rgba(251,75,77,0.9);
	color:white;
	box-shadow:4rpx 6rpx 16rpx #ccc;
	text-align:center;
	line-height:2;
}
.new-bill:before {
	content:none !important;
}
/* 时间轴 */
  .time-mark {
	font-size:36rpx;
	color:#bfa073;
	font-weight:bold;
}
.time-axis {
	position:relative;
	padding:32rpx 24rpx;
}
.time-axis ul:before {
	content:'';
	position:absolute;
	top:0;
	bottom:0;
	width:4rpx;
	background:#efefef;
	left:60rpx;
	margin-left:-20rpx;
}
.time-axis ul li {
	position:relative;
	margin-left:66rpx;
	margin-bottom:24rpx;
	/*overflow:hidden;
	*/
    display:block;
}
.time-axis ul li image {
	width:60rpx;
	height:60rpx;
}
.time-axis ul li .category-month-day {
	position:absolute;
	top:28rpx;
	left:-80rpx;
	font-size:20rpx;
	color:#999;
	width:64rpx;
	height:64rpx;
	line-height:64rpx;
	border-radius:50%;
	text-align:center;
	border:2rpx solid #efefef;
	background:white;
}
.time-axis ul li:not(.normal) {
	box-shadow:0rpx 0rpx 2rpx #ccc;
	border-radius:4rpx;
	padding:0rpx 24rpx 20rpx 24rpx;
}
.time-mark:before {
	margin-left:-50rpx !important;
}
.time-axis ul li > view {
	margin-bottom:4rpx;
}
.time-axis ul li .title {
	color:#587284;
	display:inline-block;
}
.time-axis ul li .description {
	font-size:28rpx;
	color:#6a6a6a;
}
.time-axis ul li category {
	font-size:24rpx;
}
.time-axis ul li category label {
	padding:6rpx 10rpx;
	background-color:#EFEFEF;
	color:#6a6a6a;
	margin-right:8rpx;
}
.time-axis ul li time {
	font-size:24rpx;
	color:#9B9B9B;
}
.st-title {
	padding-top:8rpx;
}
.current-day {
	background:cadetblue !important;
	color:white !important;
}

</style>
