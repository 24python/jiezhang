<template>
  <view class="container">
    <view class="header">
      <image class="bg" src="{{ header.bg_avatar }}"></image>
      <view class="level-2">
        <view class="fs14">
          <text>今日支出</text>
          <text> {{ header.pay_num }} </text>
          <text>笔，共</text>
        </view>
        <view class="fs21 today-expend">{{ header.today_pay }}</view>
        <view class="overflow-hide">
          <view class="pull-left fs14">本月支出 {{ header.month_pay }}</view>
          <navigator url="/pages/budgets/budget"><view class="pull-right fs14">预算剩余 {{ header.budget }}</view></navigator>
        </view>
      </view>
      <navigator url="/pages/message/message"><view class="iconfont jz-icon-xiaoxi {{ header.has_no_read ? 'no-read-msg' : '' }}"></view></navigator>
    </view>
    
    <view class="zan-btns new-record">
      <navigator url="/pages/statements/statement">
        <button class="zan-btn jz-btn btn-shadow">记一笔</button>
      </navigator>
    </view>

    <view class="statement-list">
      <repeat for="{{ list }}" key="index" index="index" item="item">
        <StatementItem :statement.sync="item"></StatementItem>
      </repeat>
    </view>
    
    <view wx:if="{{ list.length == 0 }}">
      <empty :title.sync="emptyTitle"></empty>
    </view>

  </view>
</template>

<script>
  import wepy from 'wepy'
  import wxRequest from '@/utils/wxRequest'
  import Session from '@/utils/session'
  import Empty from '@/components/empty'
  import StatementItem from '@/components/index/statement'
  import { getStore } from 'wepy-redux'
  import { asyncList } from '@/store/actions'
  export default class Index extends wepy.page {
    config = {
      navigationBarTitleText: '首页'
    }

    data = {
      emptyTitle: '本周还没有开始记账哦~',
      orderEmptyTitle: '无预购清单，点击下方添加一笔吧',
      list: [],
      header: {
        today_pay: '0.00',
        budget: '未设置预算',
        pay_num: 0,
        bg_avatar: null
      }
    }

    components = {
      empty: Empty,
      orderEmpty: Empty,
      StatementItem
		}

    onShow () {
      this.getHeader()
      this.getList()
      this.bgImage()
    }

    async getHeader () {
      if (Session.get('header_load_cache')) {
        this.header = Session.get('header_load_cache')
        this.$apply()
      }

      const data = await wxRequest.Get('header')
      let bg_images_key = Session.key.bgImageKey
      if (typeof data == undefined || data.bg_avatar == '') {
        data.bg_avatar = this.header.bg_avatar
      }
      this.header = data
      if (typeof data != undefined) {
        Session.set(bg_images_key, data.bg_avatar)
      }
      Session.set('header_load_cache', this.header)
      this.$apply()
    }

    async getList() {
      if (Session.get('index_load_cache')) {
        this.list = Session.get('index_load_cache')
        this.$apply()
      }

      const store = getStore()
      await store.dispatch(asyncList())
      const res = store.getState().statement.statements
      this.list = res
      Session.set('index_load_cache', res)
      this.$apply()
    }

    bgImage () {
      let bg_images_key = Session.key.bgImageKey
      let cacheImage = Session.get(bg_images_key)
      if(cacheImage) {
        this.header.bg_avatar = cacheImage
        return false
      }
      let avatar = this.header.bg_avatar
      if (avatar == null || avatar == '') {
        this.header.bg_avatar = "../public/images/covers/default-10.jpeg"
      }
    }

    computed = {
      showEmpty () {
        return this.list.length <= 0
      }
    }
  }
</script>
<style lang="scss" src="@/public/styles/index.scss"></style>
