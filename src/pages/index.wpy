<template>
  <view class="container">
    <view class="header">
      <image class="bg" src="{{ header.bg_avatar }}"></image>
      <!-- <view class="notification">
        <image src="../public/images/notification.png"></image>
      </view> -->
      <view class="set-avatar" @tap="setAvatar">设置封面</view>

      <view class="level-2">
        <view class="fs14">
          <text>今日支出</text>
          <text class="pay-num"> {{ header.pay_num }} </text>
          <text>笔，共</text>
        </view>
        <view class="fs21 today-expend">{{ header.today_pay }}</view>
        <view class="overflow-hide">
          <view class="pull-left fs14">本月支出 {{ header.month_pay }}</view>
          <navigator url="/pages/budgets/budget"><view class="pull-right fs14">预算剩余 {{ header.budget }}</view></navigator>
        </view>
      </view>
    </view>
    
    <view class="zan-btns">
      <navigator url="/pages/statements/statement">
        <button class="zan-btn zan-btn--danger btn-shadow">记一笔</button>
      </navigator>
    </view>

    <view class="scope">
      <view class="today {{ tabActive == 'today' ? 'active' : '' }}" @tap="choseTab('today')">今天</view>
      <view class="week {{ tabActive == 'week' ? 'active' : '' }}" @tap="choseTab('week')">本周</view>
      <view class="month {{ tabActive == 'month' ? 'active' : '' }}" @tap="choseTab('month')">本月</view>
      <view class="year {{ tabActive == 'year' ? 'active' : '' }}" @tap="choseTab('year')">本年</view>
    </view>

    <view class="statement-list">
      <repeat for="{{ list }}" key="index" index="index" item="item">
        <indexst :statement.sync="item"></indexst>
      </repeat>
    </view>
    <!-- <view wx:else>
      <empty title="快来记录第一笔帐吧~"></empty>
    </view> -->
  </view>
</template>

<script>
  import wepy from 'wepy'
  import api from "../utils/api"
  import Empty from '../components/empty'
  import IndexSt from '../components/index_st'
  export default class Index extends wepy.page {
    config = {
      navigationBarTitleText: '首页',
      enablePullDownRefresh: true
    }

    data = {
      indicatorDots: true,
      autoplay: false,
      duration: 600,
      tabActive: 'today',
      scope: 'today',
      list: [],
      curPage: 1,
      per_page: 20,
      header: {
        today_pay: 0,
        pay_num: 0,
        budget: 0,
        bg_avatar: '../public/images/default-bg.jpeg'
      },
      stopRequest: false,
      preventRepeatReuqest: false
    }

    components = {
      empty: Empty,
      indexst: IndexSt
		}

    methods = {
      async setAvatar () {
        const choseImages = await wepy.chooseImage({
          count: 1,
          sizeType: ['compressed'],
          sourceType: ['album']
        })
        const uploadResult = await api.Upload(
          {
            file_path: choseImages.tempFilePaths[0],
            query: {
              type: 'bg_avatar'
            }
          })
        this.getHeader()
      },
      async choseTab (item) {
        this.tabActive = item
        this.curPage = 1
        if (this.scope != item) {
          this.scope = item
          this.list = []
          await this.getList()
        }
      },
      onTabItemClick(e) {
        console.log(e)
      }
    }

    computed = {
      showEmpty () {
        return this.list.length <= 0
      },
      todayMonthDay () {
        const NowDate = new Date()
        let month = NowDate.getMonth() + 1
        let day = NowDate.getDate()
        if (month < 10) month = "0" + month
        if (day < 10) day = "0" + day
        return  month + "-" + day
      }
    }

    onPullDownRefresh () {
      wx.stopPullDownRefresh()
      this.getHeader()
      this.curPage = 1
      this.list = []
      this.stopRequest = false
      this.getList({showLoading: true})
    }

    async onLoad () {
      await this.getHeader()
      await this.getList()
    }

    // onShow () {
    //   this.getHeader()
    // }

    // 此函数用于 statement.wpy 里更新后调用
    updateStatement (id, type) {
      // 此处应使用二分查找
      if (type == 'put' || type == 'delete') {
        let index = 0
        for(let item of this.list) {
          if (item.id == id) {
            if(type == 'delete') {
              this.list.splice(index, 1)
            } else {
              this.getStatementById(item, id)
            }
            break
          }
          index += 1
        }
      } else {
        this.addStatementById(id)
      }
    }

    async onReachBottom () {
      this.curPage ++
      await this.getList()
    }

    async getHeader () {
      const res = await api.getIndexHeader()
      this.header = res.data
      this.$apply()
    }

    async getList(options = {}) {
      const res = await api.getIndexList({
        showLoading: options.showLoading,
        query: {
          scope: this.scope,
          page: this.curPage,
          per_page: this.per_page
        }
      })
      const data = res.data
      if(data.status != 405) {
        this.list = Array.from(new Set([...this.list, ...data]))
      }
      this.$apply()
    }

    async getStatementById(obj, id) {
      const res = await api.getIndexBill(id)
      Object.assign(obj, res.data)
      this.$apply()
    }

    async addStatementById(id) {
      const res = await api.getIndexBill(id)
      this.list = [res.data].concat(this.list)
      this.$apply()
    }

  }
</script>
<style lang="less">
.scope {
  text-align: center;
  margin-bottom: 24rpx;
  > view {
    display: inline;
    font-size: 28rpx;
    padding: 12rpx 24rpx;
  }
  .today.active {
    color: red;
    border-bottom: 4rpx solid red;
  }
  .week.active {
    color: green;
    border-bottom: 4rpx solid green;
  }
  .month.active {
    color: orange;
    border-bottom: 4rpx solid orange;
  }
  .year.active {
    color: #A52A2A;
    border-bottom: 4rpx solid #A52A2A;
  }
}
.header {
	position:relative;
	color:white;
	height:380rpx;
	.bg {
	position:absolute;
	width:100%;
	height:100%;
	top:0;
	left:0;
	z-index:-1;
}
.level-2 {
	position:absolute;
	bottom:24rpx;
	width:100%;
	.today-expend {
	font-size:64rpx;
	margin-bottom:16rpx;
}
> view {
	padding:0 16rpx;
}
}.pay-num {
	background:rgb(32,86,174);
	margin:0 4rpx;
}
.notification {
	position:absolute;
	top:42rpx;
	right:42rpx;
	width:60rpx;
	height:60rpx;
	background:black;
	border-radius:50%;
	padding:8rpx;
	image {
	width:100%;
	height:100%;
}
}}.today {
	background-size:cover;
	background-position:10rpx -170rpx;
}
.today-pay {
	font-size:24rpx;
}
.today-total {
	font-weight:600;
}
.cur-month-progress {
	padding:0 40rpx;
}
.new-record-btn {
	margin-bottom:16rpx;
	position:relative;
	display:block;
	margin-left:auto;
	margin-right:auto;
	padding-left:28rpx;
	padding-right:28rpx;
	box-sizing:border-box;
	font-size:36rpx;
	text-align:center;
	text-decoration:none;
	line-height:2;
	border-radius:6rpx;
	-webkit-tap-highlight-color:transparent;
	overflow:hidden;
	color:white;
	background-color:#48C4FE;
}
.new-bill {
	margin:24rpx;
}
.new-bill button {
	border-radius:4rpx;
	background:rgba(251,75,77,0.9);
	color:white;
	box-shadow:4rpx 6rpx 16rpx #ccc;
	text-align:center;
	line-height:2;
}
.new-bill:before {
	content:none !important;
}
/* 时间轴 */
  .time-mark {
	font-size:36rpx;
	color:#bfa073;
	font-weight:bold;
}
.time-axis {
	position:relative;
	padding:32rpx 24rpx;
}
.time-axis ul:before {
	content:'';
	position:absolute;
	top:0;
	bottom:0;
	width:4rpx;
	background:#efefef;
	left:60rpx;
	margin-left:-20rpx;
}
.time-axis ul li {
	position:relative;
	margin-left:66rpx;
	margin-bottom:24rpx;
	/*overflow:hidden;
	*/
    display:block;
}
.time-axis ul li image {
	width:60rpx;
	height:60rpx;
}
.time-axis ul li .category-month-day {
	position:absolute;
	top:28rpx;
	left:-80rpx;
	font-size:20rpx;
	color:#999;
	width:64rpx;
	height:64rpx;
	line-height:64rpx;
	border-radius:50%;
	text-align:center;
	border:2rpx solid #efefef;
	background:white;
}
.time-axis ul li:not(.normal) {
	box-shadow:0rpx 0rpx 2rpx #ccc;
	border-radius:4rpx;
	padding:0rpx 24rpx 20rpx 24rpx;
}
.time-mark:before {
	margin-left:-50rpx !important;
}
.time-axis ul li > view {
	margin-bottom:4rpx;
}
.time-axis ul li .title {
	color:#587284;
	display:inline-block;
}
.time-axis ul li .description {
	font-size:28rpx;
	color:#6a6a6a;
}
.time-axis ul li category {
	font-size:24rpx;
}
.time-axis ul li category label {
	padding:6rpx 10rpx;
	background-color:#EFEFEF;
	color:#6a6a6a;
	margin-right:8rpx;
}
.time-axis ul li time {
	font-size:24rpx;
	color:#9B9B9B;
}
.st-title {
	padding-top:8rpx;
}
.current-day {
	background: orange !important;
	color:white !important;
}
.set-avatar {
  position:absolute;
  right:8rpx;
  top:40rpx;
  width:160rpx;
  text-align:center;
  height:60rpx;
  line-height:64rpx;
  background:rgba(0, 0, 0, 0.5);
  font-size:24rpx;
  border-radius:32rpx;
  color:#ccc;
}
</style>
