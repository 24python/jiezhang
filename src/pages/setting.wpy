<template>
  <view class="container">
    <view class="header">
      <!-- header -->
      <view class="user" wx:if="{{ alreadyLogin }}">
        <view class="user-avatar">
          <image src="{{ user.avatar_url }}"></image>
        </view>
        <view class="user-info">
          <view>
            <text class="user-name">{{ user.name }}</text>
            <text class="designation">记账达人</text>
          </view>
          <view class="persistence">
            已坚持记账 {{ user.persist }} 天
          </view>
        </view>
      </view>

      <view class="user" wx:else>
        <view class="user-avatar">
          <image src="../public/images/default-user.png"></image>
        </view>
        <view class="user-info">
          <button class="get-user-btn" open-type="getUserInfo" bindgetuserinfo="getUserInfo">点击登录</button>
          <view class="persistence" style="font-size: 14px; margin-top: 6px">
            登录后开启记账之旅
          </view>
        </view>
      </view>
      <!-- <view class="arrow-icon"><image src="../public/images/setting-right-arrow.png"></image></view> -->
    </view>

    <view class="three column">
      <view @tap="redirect('/pages/settings/super_statement')">
        <view><image src="../public/images/004-receipt.png"></image></view>
        <view>超级账单</view>
      </view>
      <view @tap="redirect('/pages/settings/super_chart')">
        <view><image src="../public/images/003-pie-chart.png"></image></view>
        <view>消费报表</view>
      </view>
      <view @tap="developing()">
        <view><image src="../public/images/001-list-1.png"></image></view>
        <view>预购清单</view>
      </view>
    </view>

    <view class="setting-container">
      <view @tap="redirect('/pages/budgets/budget')">
        <view>
          <image src="../public/images/001-calculator.png"></image>
          <text>预算设置</text>
        </view>
        <view class="zan-icon zan-icon-arrow"></view>
      </view>

      <view @tap="developing()">
        <view>
          <image src="../public/images/003-user.png"></image>
          <text>多人记账</text>
        </view>
        <view class="zan-icon zan-icon-arrow"></view>
      </view>

      <view @tap="developing()">
        <view>
          <image src="../public/images/002-piggybank.png"></image>
          <text>梦想存钱罐</text>
        </view>
        <view class="zan-icon zan-icon-arrow"></view>
      </view>
    </view>

    <view class="setting-container" style="margin: 12px 0">
      <view wx:for="{{ menu }}" @tap="redirect('{{ item.url }}')">
        <view>
          <text>{{ item.name }}</text>
        </view>
        <view class="zan-icon zan-icon-arrow"></view>
      </view>

      <!-- <view class="about-jz" @tap="cleanSession">
        <text>清除缓存</text>
        <text class="version">1.2M</text>
      </view> -->

      <view class="about-jz">
        <text>关于洁账</text>
        <text class="version">{{ version }}</text>
      </view>
    </view>
  </view>
</template>

<script>
  import wepy from 'wepy'
  import api from "../utils/api";
  import tip from '../utils/tip'
  import Session from '../utils/session'

  export default class Setting extends wepy.page {
    config = {
      navigationBarTitleText: '我的'
    }
    
    data = {
      menu: [
        {
          name: '资产类型分类',
          url: '/pages/assets/list'
        },
        {
          name: '支出分类管理',
          url: '/pages/categories/list?type=expend'
        },
        {
          name: '收入分类管理',
          url: '/pages/categories/list?type=income'
        },
        {
          name: '封面设置',
          url: '/pages/settings/set_cover'
        },
        {
          name: '反馈与建议',
          url: '/pages/settings/feedback'
        }
      ],
      user: {},
      version: '',
      alreadyLogin: this.loginStatus()
    }

    onShow () {
			this.getData()
    }
    
    methods = {
      redirect (url) {
        wepy.navigateTo({
          url: url
        })
      },
      cleanSession () {
        wx.clearStorage()
        tip.toast('清理成功')
      },
      async getUserInfo (e) {
        if(e.detail.errMsg != 'getUserInfo:ok') return false
        
        let userInfo = e.detail.userInfo
        const res = await api.updateUser({
          method: 'PUT',
          query: { user: userInfo }
        })
        let key = Session.key.alreadyLogin
        Session.set(key, true)
        this.getData()
        this.alreadyLogin = true
        this.$apply()
      },
      logout () {
        let key = Session.key.alreadyLogin
        Session.clear(key)
        this.alreadyLogin = false
      },
      developing () {
        tip.toast('开发中，敬请期待')
      }
    }

    loginStatus () {
      let key = Session.key.alreadyLogin
      return Session.get(key) == null ? false : true
    }

    async getData () {
      const res = await api.Settings()
      const data =  res.data
      this.user = data.user
      this.version = data.version
      this.$apply()
    }
  }
</script>
<style lang="scss" src="../public/styles/setting.scss"></style>