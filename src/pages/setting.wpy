<template>
<view class="container">

  <view class="header overflow-hide" @tap="redirect('/pages/settings/user_info')" wx:if="{{ alreadyLogin }}">
    <image class="pull-left" src="{{ user.avatar_url }}" />
    <view class="pull-left user-info">
      <view>{{ user.name }}</view>
      <view>个人信息> </view>
    </view>
    <view class="pull-right remark-day">已坚持记账 {{ user.persist }} 天</view>
  </view>

  <view class="header overflow-hide" wx:else>
    <image class="pull-left" src="/public/images/no_login_avatar.png" />
    <button class="get-user-btn" open-type="getUserInfo" bindgetuserinfo="getUserInfo">点击登录</button>
  </view>

  <view class="zan-panel">
    <view class="zan-cell zan-cell--access" @tap="redirect('/pages/budgets/budget')">
      <view class="zan-cell__bd">预算设置</view>
      <view class="zan-cell__ft">{{ user.budget }}</view>
    </view>

    <!-- <view class="zan-cell zan-cell--access" @tap="redirect('/pages/settings/set_cover')">
      <view class="zan-cell__bd">封面设置</view>
      <view class="zan-cell__ft"></view>
    </view> -->

    <!-- <view class="zan-cell zan-cell--access">
      <view class="zan-cell__bd">消费分析</view>
      <view class="zan-cell__ft"></view>
    </view> -->

    <!-- <view class="zan-cell zan-cell--access">
      <view class="zan-cell__bd">图表浏览</view>
      <view class="zan-cell__ft"></view>
    </view> -->

    <!-- <view class="zan-cell zan-cell--access">
      <view class="zan-cell__bd">超级账单</view>
      <view class="zan-cell__ft"></view>
    </view> -->
  </view>

  <view class="zan-panel">
    <view class="zan-cell zan-cell--access" @tap="redirect('/pages/settings/super_statement')">
      <view class="zan-cell__bd">超级账单</view>
      <view class="zan-cell__ft"></view>
    </view>

    <view class="zan-cell zan-cell--access" @tap="redirect('/pages/assets/list')">
      <view class="zan-cell__bd">资产类型管理</view>
      <view class="zan-cell__ft"></view>
    </view>

    <view class="zan-cell zan-cell--access" @tap="redirect('/pages/categories/list?type=expend')">
      <view class="zan-cell__bd">支出分类管理</view>
      <view class="zan-cell__ft"></view>
    </view>

    <view class="zan-cell zan-cell--access" @tap="redirect('/pages/categories/list?type=income')">
      <view class="zan-cell__bd">收入分类管理</view>
      <view class="zan-cell__ft"></view>
    </view>
  </view>

  <view class="zan-panel">
    <view class="zan-cell zan-cell--access" @tap="redirect('/pages/settings/feedback')">
      <view class="zan-cell__bd">帮助与反馈</view>
      <view class="zan-cell__ft"></view>
    </view>

    <view class="zan-cell zan-cell--access" @tap="cleanSession">
      <view class="zan-cell__bd">清理缓存</view>
    </view>

    <view class="zan-cell zan-cell--access">
      <view class="zan-cell__bd">关于洁账</view>
      <view>{{ version }}</view>
    </view>

    <view class="zan-cell zan-cell--access" wx:if="{{ alreadyLogin }}" @tap="logout">
      <view class="zan-cell__bd">退出登录</view>
    </view>
  </view>

</view>
</template>

<script>
  import wepy from 'wepy'
  import api from "../utils/api";
  import tip from '../utils/tip'
  import Session from '../utils/session'

  export default class Setting extends wepy.page {
    config = {
      navigationBarTitleText: '个人设置'
    }

    data = {
      user: {},
      version: '',
      alreadyLogin: this.loginStatus()
    }

    onShow () {
			this.getData()
    }
    
    methods = {
      redirect (url) {
        wepy.navigateTo({
          url: url
        })
      },
      cleanSession () {
        wx.clearStorage()
        tip.toast('清理成功')
      },
      async getUserInfo (e) {
        if(e.detail.errMsg != 'getUserInfo:ok') return false
        
        let userInfo = e.detail.userInfo
        const res = await api.updateUser({
          method: 'PUT',
          query: { user: userInfo }
        })
        let key = Session.key.alreadyLogin
        Session.set(key, true)
        this.getData()
        this.alreadyLogin = true
        this.$apply()
      },
      logout () {
        let key = Session.key.alreadyLogin
        Session.clear(key)
        this.alreadyLogin = false
      }
    }

    loginStatus () {
      let key = Session.key.alreadyLogin
      return Session.get(key) == null ? false : true
    }

    async getData () {
      const res = await api.Settings()
      const data =  res.data
      this.user = data.user
      this.version = data.version
      this.$apply()
    }
  }
</script>
<style lang="scss" src="../public/styles/setting.scss"></style>