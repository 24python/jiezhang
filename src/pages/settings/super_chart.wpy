<template>
  <view class="container">
    <view class="time-filter">
      <view class="month-filter">
        <view class="iconfont jz-icon-arrow-left" @tap="setParams('prev')"></view>
        <view class="month" wx:if="{{ type == 'month' }}">{{ year }} - {{ month }}</view>
        <view class="month" wx:if="{{ type == 'year' }}">{{ year }}</view>
        <view class="month" wx:if="{{ type == 'all' }}">所有</view>
        <view class="iconfont jz-icon-arrow-right-copy" @tap="setParams('next')"></view>
      </view>

      <view class="chart-filter">
        <view @tap="setType('month')">按月</view>
        <view @tap="setType('year')">按年</view>
        <view @tap="setType('all')">全部</view>
      </view>
    </view>

    <view class="chart-amount">
      <view>
        <view class="amount">{{ header.expend_count }}</view>
        <view class="small-text">总支出</view>
        <view class="percent-rise {{ header.expend_rise }}">同期{{ header.expend_rise == 'income' ? '增长' : '下降' }} {{ header.expend_percent }}%</view>
      </view>

      <view>
        <view class="amount">{{ header.income_count }}</view>
        <view class="small-text">总收入</view>
        <view class="percent-rise {{ header.income_rise }}">同期{{ header.income_rise == 'income' ? '增长' : '下降' }} {{ header.income_percent }}%</view>
      </view>

      <view>
        <view class="amount">{{ header.surplus }}</view>
        <view class="small-text">结余</view>
        <view class="percent-rise {{ header.surplus_rise }}">同期{{ header.surplus_rise == 'income' ? '增长' : '下降' }} {{ header.surplus_percent }}%</view>
      </view>
    </view>

    <swiper style="width: 100%; height: 280px;">
      <swiper-item>
        <canvas canvas-id="pieCanvas" disable-scroll="true" class="piecanvas" style="width: 100%; height: 280px;"></canvas>
      </swiper-item>

      <swiper-item>
        <canvas canvas-id="lineCanvas" disable-scroll="true" class="lineCanvas" style="width: 100%; height: 280px;"></canvas>
      </swiper-item>
    </swiper>

    

    <view class="expend-bars" wx:if="{{ chartData.length > 0 }}">
      <view class="item" wx:for="{{ chartData }}" style="background-size: {{ item.percent * 2 }}% 100%;" @tap="redirectTo('{{ item.category_id }}')">
        <view>
          <view class="title">{{ item.name }}<text class="percent">{{ item.percent }}%</text></view>
          <view class="amount">{{ item.format_amount }}</view>
        </view>
        <view class="zan-icon zan-icon-arrow"></view>
      </view>
    </view>

    <empty wx:if="{{ chartData.length == 0 }}" :title.sync="emptyTitle"></empty>

  </view>
</template>

<script>
  import wepy from 'wepy'
  import Api from "@/utils/api"
  import wxRequest from '@/utils/wxRequest'
  import wxCharts from '@/utils/wxchart.min.js'
  import Empty from '@/components/empty'
  
  export default class superChart extends wepy.page {
    config = {
      navigationBarTitleText: '消费报表'
    }

    data = {
      chartData: [],
      header: {},
      info: {},
      type: 'month',
      year: new Date().getFullYear(),
      month: new Date().getMonth() + 1,
      emptyTitle: '找不到数据呢~试试其它'
    }

    components = {
      empty: Empty
		}

    methods = {
      setParams (type) {
        if (type == 'all') return false
        if (type == 'next') {
          if(this.type == 'month') this.nextMonth()
          if(this.type == 'year') this.year += 1
        } else {
          if(this.type == 'month') this.prevMonth()
          if(this.type == 'year') this.year -= 1
        }
        this.getChartData()
        this.getLineChartData()
      },
      redirectTo (category_id) {
        wepy.navigateTo({
          url: `/pages/statements/filter_statements?year=${this.year}&month=${this.month}&category_id=${category_id}`
        })
      },
      setType (type) {
        this.type = type
        this.getChartData()
      }
    }

    async onShow() {
      this.info = await wepy.getSystemInfo()
      this.getChartData()
      this.getLineChartData()
    }

    nextMonth () {
      if (this.month == 12) {
        this.year += 1
        this.month = 1
      } else {
        this.month += 1
      }
    }

    prevMonth () {
      if (this.month == 1) {
        this.year -= 1
        this.month = 12
      } else {
        this.month -= 1
      }
    }

    async initChart (data) {
      new wxCharts({
        canvasId: 'pieCanvas',
        type: 'pie',
        series: data,
        width: this.info.screenWidth,
        height: 280,
        legend: true,
        dataLabel: true
      });
    }

    async getChartData () {
      const data = await wxRequest.Get(
        Api.SuperChart, {
          type: this.type,
          year: this.year,
          month: this.month
        })
      this.header = data.header
      this.chartData = data.charts
      if (data.wx_charts.length != 0) this.initChart(data.wx_charts)
      this.$apply()
    }

    async getLineChartData () {
      const data = await wxRequest.Get('super_chart/line_chart', {year: this.year})
      try {
        if(data.months.length > 0) this.initLineChart(data)
      } catch (e) {
        console.log(e)
      }
    }

    async initLineChart (data) {
      new wxCharts({
        canvasId: 'lineCanvas',
        type: 'line',
        categories: data.months,
        series: [{
            name: '收入',
            data: data.incomes
        }, {
            name: '支出',
            data:  data.expends
        }],
        yAxis: {
            title: '金额',
            min: 0
        },
        width: this.info.screenWidth,
        height: 280
     });
    }

  }
</script>
<style lang="scss" src="@/public/styles/super_chart.scss"></style>
