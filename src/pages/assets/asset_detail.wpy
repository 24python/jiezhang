<template>
<view class="container">
  <view id="wallet-header">
    <view class="surplus">
      <view class="surplus-amount fs24" @tap="showCaculate">
        <text class="pull-left">{{ header.surplus }}</text>
        <image class="edit-icon pull-left" src="../../public/images/edit.png"></image>
      </view>
      <view class="fs16">余额</view>
    </view>
    <view class="bottom">
      <view>
        <view class="fs24">{{ header.income }}</view>
        <view class="fs16">收入</view>
      </view>
      <view>
        <view class="fs24">{{ header.expend }}</view>
        <view class="fs16">支出</view>
      </view>
    </view>
  </view>

  <view class="filter">
    <view>
      <text>时间</text>
      <view class="down-icon"><image src="../../public/images/real-down.png"></image></view>
    </view>
    <view>
      <text>分类</text>
      <view class="down-icon"><image src="../../public/images/real-down.png"></image></view>
    </view>
    <view>
      <text>账户</text>
      <view class="down-icon"><image src="../../public/images/real-down.png"></image></view>
    </view>
  </view>
  
  <!-- <view class="divide"></view> -->

  <view id="all-assets" wx:if="{{ !showEmpty }}">
    <view class="asset category" wx:for="{{ list }}" wx:for-item="pst" bindtap="showHidden('{{ index }}')">
      <view class="detail">
        <!-- header -->
        <view class="title">
          <view class="pull-left time align-column">
            <view class="fs16">{{ pst.month }}月</view>
            <view class="fs14 description">{{ pst.year }}</view>
          </view>
          <view class="pull-left align-column income-and-expend">
            <view class="fs14 income">收入 {{ pst.income_amount }}</view>
            <view class="fs14 expend">支出 {{ pst.expend_amount }}</view>
          </view>
          <view class="pull-right align-column left-money">
            <view class="fs18">{{ pst.surplus }}</view>
          </view>
        </view>

        <!-- content -->
        <view class="content" hidden="{{ pst.hidden }}">
          <repeat for="{{ pst.childs }}" key="index" index="index" item="item">
            <single :item.sync="item"></single>
          </repeat>
        </view>
      </view>
    </view>
  </view>

  <view wx:else>
    <empty title="暂无数据哦~"></empty>
  </view>

  <caculate @invokeCaculation.user="invokeCaculation" hidden="{{ !showCaculation }}"></caculate>
</view>
</template>

<script>
	import wepy from 'wepy'
  import api from "../../utils/api"
  import tip from '../../utils/tip'
  import Caculate from '../../components/caculate'
  import Empty from '../../components/empty'
  import Single from '../../components/single'
  export default class AssetDetail extends wepy.page {
    config = {
      navigationBarTitleText: '消费详情'
    }

    components = {
      caculate: Caculate,
      empty: Empty,
      single: Single
    }

		data = {
      asset_id: 0,
      header: {
        income: '0.00',
        expend: '0.00',
        surplus: '0.00'
      },
      list: [], 
      already_load: false,
      showCaculation: false 
    }
    
    methods = {
      showHidden(idx) {
        let value = !this.list[idx].hidden
        this.list[idx]['hidden'] = value
			},
      showStatement (id) {
        wx.navigateTo({ url: `/pages/statements/statement?id=${id}` })
      },
      showCaculate() {
        this.showCaculation = true
      },
      invokeCaculation (amount) {
        this.showCaculation = false
        this.updateSurplus(amount)
      }
    }

    onLoad (options) {
      // this.asset_id = options.id
      this.asset_id = 34
      this.already_load = true
      this.information()
      this.statements()
    }

    onShow () {
      if (this.already_load) {
        this.information()
        this.statements()
      }
    }

    onPullDownRefresh () {
      wx.stopPullDownRefresh()
      this.information()
      this.statements()
    }

    async information () {
       const res = await api.AssetDetailInformation({
        query: {
          asset_id: this.asset_id
        }
      })
      this.header = res.data
      this.$apply()
    }

    async statements () {
       const res = await api.AssetDetailList({
        showLoading: true,
        query: {
          asset_id: this.asset_id
        }
      })
      this.list = res.data
      this.$apply()
    }

		async updateSurplus (amount) {
      const res = await api.AssetSurplus({
        method: "PUT",
        query: {
          asset_id: this.asset_id,
          amount: amount
        }
      })

      if (res.data.status == 200) {
        this.information()
      } else {
        tip.error(res.data.msg)
      }
    }

    computed = {
      showEmpty () {
        return this.list.length <= 0
      }
    }

  }
</script>
<style lang="less">
@themColor: #fb4b4d;
@fontColor: #999;
#wallet-header {
  position:relative;
  height:300rpx;
  background:linear-gradient(rgba(251,75,77,1),rgba(241,75,77,0.9));
  box-shadow:0 0 20rpx #ccc;
  color:white;
  padding:0 16rpx;
  .surplus {
    position: absolute;
    top:40rpx;
  }
  .bottom {
    position: absolute;
    bottom: 20rpx;
    width: 100%;
    & > view {
      width:50%;
      float:left;
    }
  }
  .edit-icon {
    width:50rpx;
    height:50rpx;
    margin-left:16rpx;
  }
  .surplus-amount {
    overflow:hidden;
      image {
      margin-top:8rpx;
    } 
  }
}

#all-assets {
  height: 100%;
  .col999 {
    color: @fontColor;
  }
  .category {
    .detail > .title {
      overflow-y:hidden;
      padding:0 24rpx;
      height: 120rpx;
      border-bottom:2rpx solid #efefef;
      > .time {
        height: 100%;
        text-align:center;
      }
      .align-column {
        display:flex;
        justify-content:center;
        flex-direction:column;
        height: 100%;
      }
      .income-and-expend {
        margin-left:16rpx;
      }
      .left-money {
        color:#999;
        text-align:right;
      }
    }
    .detail > .content {
      background: #FAFAFC;
    }
  }
}

.filter {
  height: 100rpx;
  line-height: 100rpx;
  background: white;
  box-shadow: 0 0 3px #ccc;
  display:flex;
  > view {
    flex: 1;
    text-align: center;
    font-size: 36rpx;
    > text {
      margin-right: 8rpx;
    }
  }
}

.down-icon {
  height: 100rpx;
  line-height:  100rpx;
  display: inline-block;
  image {
    width: 40rpx;
    height: 40rpx;
    vertical-align: middle;
  }
}
</style>