<template>
    <view class="container">
    <view class="grid">
      <view class="item">
        <view class="item-name">
          <text>分类名称</text>
        </view>
        <input value="{{ category.name }}" bindinput="bindKeyName" maxlength="15" placeholder="请输入分类名称" />
      </view>

      <view class="item">
        <view class="item-name">
          <text>是否顶级分类</text>
        </view>
        <switch checked="{{ isParentLevel }}" bindchange="changeSwitch" />
      </view>

      <view class="item picker" hidden="{{ isParentLevel }}">
        <text class="picker-type">所属分类</text>
        <picker range="{{ parentCategories }}" value="{{ curIndex }}" range-key="name" bindchange="changeCategory">
          <view class="name">{{ parentCategories[curIndex]['name'] }}</view>
        </picker>
      </view>
    </view>

    <navigator url="/pages/forms/icons_chose?url=categories" class="item">
      <view class="item-name">
        <text>图标</text>
      </view>
      <image class="icon-image" src="{{ host }}{{ category.icon_path }}"></image>
    </navigator>

    <view class="save-btn" wx:if="{{ category.id != 0 }}">
      <view class="bill-btn" @tap="del">删除</view>
      <view class="bill-btn save" @tap="submit">保存</view>
    </view>
    
    <view class="zan-btns" wx:else>
      <button class="zan-btn jz-btn btn-shadow" style="background: #2196F3; color: white;" @tap="submit">保存</button>
    </view>
  </view>
</template>

<script>
  import wepy from 'wepy'
  import wxRequest from '@/utils/wxRequest'
  import Host from '@/utils/host'
  import tip from '@/utils/tip'
  import Session from '@/utils/session'
  export default class CategoryForm extends wepy.page {
    data = {
      category: {
        id: 0,
        name: '',
        icon_path: '',
        type: '',
        parent_id: 0
      },
      parentCategories: [],
      curIndex: 0,
      isParentLevel: false
    }

    methods = {
      changeSwitch (e) {
        this.isParentLevel = e.detail.value
        if (this.isParentLevel) {
          this.category.parent_id = 0
        } else {
          if (this.parentCategories.length > 0)
            this.category.parent_id = this.parentCategories[this.curIndex]['id']
        }
      },
      changeCategory(e) {
        let idx = e.detail.value
        this.curIndex = idx
        this.category.parent_id = this.parentCategories[idx]['id']
      },
      choseIcon (path) {
        this.category.icon_path = path
      },
      bindKeyName (e) {
        this.category.name = e.detail.value
      },
      async del () {
        await tip.confirm('删除后，该分类下的账单也将一并删除！', {}, '警告')
        const res = await wxRequest.Destroy(`categories/${this.category.id}`)
        if (res.status == 200) {
          Session.clearByKey('category')
          wepy.navigateBack({
            delta: 1
          })
        } else {
          tip.error(res.msg)
        }
      },
      async submit () {
        let method = 'POST'
        let cId = null
        if (this.category.id != 0) {
          method = 'PUT'
          cId = this.category.id
        }
        
        if (this.category.name == '') {
          tip.error('请填写分类名称')
          return false
        }

        let res = null
        if (method == 'POST') {
          res = await wxRequest.Post(`categories`, {category: this.category})
        } else {
          res = await wxRequest.Put(`categories/${cId}`, {category: this.category})
        }

        if (res.status == 200) {
          Session.clearByKey('category')
          wepy.navigateBack({
            delta: 1
          })
        } else {
          tip.error(res.msg)
        }
      }
    }

    onLoad (options) {
      this.category.type = options.type
      this.getParentCategories()
      if (options.id != undefined) {
        this.getCategory(options.id)
      }
    }

    computed = {
      host () {
        return Host.host;
      }
    }

    async getCategory(id) {
      const data = await wxRequest.Get(`categories/${id}`,{ type: this.category.type })
      this.category = data
      if (this.category.parent_id != 0) {
        this.updateCurrentIndex()
      } else {
        this.isParentLevel = true
      }
      this.$apply()
    }

    async getParentCategories() {
      const data = await wxRequest.Get('categories/parent', {type: this.category.type})
      this.parentCategories = data

      if (this.parentCategories.length > 0 && !this.isParentLevel && this.category.id == 0) {
        this.category.parent_id = this.parentCategories[0]['id']
      }
      this.$apply()
    }

    updateCurrentIndex () {
      for (let index in this.parentCategories) {
        if (this.parentCategories[index]['id'] == this.category.parent_id) {
          this.curIndex = index
          return false
        }
      }
    }

    setIcon (e) {
      this.category.icon_path = e.icon
      this.$apply()
    }

  }
</script>
<style lang="scss" src="@/public/styles/forms/category_form.scss"></style>