<template>
  <view class="container">

    <view class="parent">
      <view class="budget-info" @tap="showCaculate('{{ budget.id }}')">
        <view class="left"><image src="{{ budget.icon_path }}"></image></view>
        <view class="right">
          <view class="title">
            <text class="fs16 pull-left">{{ budget.name }}</text>
            <text class="balance pull-right fs14">可用余额 {{ budget.surplus }}</text>
          </view>
          <!-- 进度条 -->
          <view class="progress">
            <view class="orange" style="width: {{ budget.use_percent }}%;"></view>
            <view class="gray" style="width: {{ budget.surplus_percent }}%;"></view>
          </view>

          <view class="fs12 budget-amount">支出预算 {{ amount }}</view>
        </view>
      </view>
    </view>

    <view class="child">
      <view class="budget-info" wx:for="{{ childs }}" @tap="showCaculate('{{ item.id }}')">
        <view class="left"><image src="{{ item.icon_path }}"></image></view>
        <view class="right">
          <view class="title">
            <text class="fs16 pull-left">{{ item.name }}</text>
            <text class="balance pull-right fs14">可用余额 {{ item.surplus }}</text>
          </view>
          
         <!-- 进度条 -->
          <view class="progress">
            <view class="orange" style="width: {{ item.use_percent }}%;"></view>
            <view class="gray" style="width: {{ item.surplus_percent }}%;"></view>
          </view>

          <view class="fs12 budget-amount">支出预算 {{ item.amount }}</view>
        </view>
      </view>
      <!-- <caculate @invokeCaculation.user="invokeCaculation" hidden="{{ !showCaculation }}"></caculate> -->
      <caculate @invokeCaculation.user="invokeCaculation" :amount.sync="amount" :showCaculation.sync="showCaculation"></caculate>
    </view>
  </view>
</template>

<script>
  import wepy from 'wepy'
  import api from "../../utils/api"
  import tip from '../../utils/tip'
  import Caculate from '../../components/caculate'

  export default class ChildBudget extends wepy.page {
    config = {
      navigationBarTitleText: '预算设置'
    }

    data = {
      showCaculation: false,
      budget: {},
      childs: [],
      parentId: 0,
      curCategoryId: 0,
      amount: '0.00'
    }

    components = {
      caculate: Caculate
    }

    methods = {
      invokeCaculation (amount) {
        this.showCaculation = false
        this.updateBudget(amount)
      },
      showCaculate(id) {
        this.curCategoryId = id
        this.showCaculation = true
      }
    }

    onLoad (options) {
      let id = options.id
      this.parentId = id
      this.getData(id)
    }

    async getData(id) {
      id = id || this.parentId
      const res = await api.BudgetDetail(id)
      this.budget = res.data.root
      this.amount = this.budget.amount
      this.childs = res.data.childs
      this.$apply()
    }

    async updateBudget (amount) {
      const res = await api.BudgetUpdate({
        method: "PUT",
        query: {
          type: 'category',
          category_id: this.curCategoryId,
          amount: amount
        }
      })
      if (res.data.status == 200) {
        this.getData()
      }
    }
  }
</script>

<style lang="less">
.container {
	height:100%;
	.parent {
    background:#f8f8f8;
    border-bottom:2rpx solid #ccc;
    .left {
      background:#f2f2f2 !important;
    }
  }
  .child .budget-info .right {
    border-bottom:2rpx solid #f2f2f2;
  }
  .parent .budget-info,.child .budget-info {
    padding:8rpx 24rpx 8rpx 12rpx;
    .left {
      float:left;
      text-align:center;
      display:flex;
      justify-content:center;
      margin-top:10rpx;
      image {
        width:70rpx;
        height:70rpx;
      }
    }
    .right {
      margin-left:92rpx;
      padding-bottom:16rpx;
      .title {
        overflow:hidden;
        vertical-align:text-bottom;
      }
      .budget-amount {
        color:#999;
      }
    }
  }
  .progress {
    margin:12rpx 0;
    overflow:hidden;
    > view {
      float:left;
      width:50%;
      height:8rpx;
    }
    .orange {
      background:orange;
    }
    .gray {
      background:#f2f2f2;
    }
  }
}
</style>